
import java.awt.Color;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.ScrollPaneConstants;
import javax.swing.text.BadLocationException;
import javax.swing.text.DefaultHighlighter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Guilherme Bacca, Peterson Boni
 */
@SuppressWarnings(value = { "true" })
public class TelaExecucao extends javax.swing.JFrame {

    public ArrayList<String> arrayInstrucoesExecucao;
    public MVM mvm;
    short mem[];
    boolean bProgramaInvalido;
    boolean bPrimeiroStep;
    boolean bStop;
    private String[][] console = new String[10][10];
    /**
     * Creates new form TelaExecucao
     */
    public TelaExecucao() {
        initComponents();
        bProgramaInvalido = false;
        bPrimeiroStep = true;
        bStop = false;
        mvm = new MVM(this);
        mem = new short[1025];
        arrayInstrucoesExecucao = new ArrayList<String>();
        
        scrollPaneCodigo.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        scrollPaneCodigo.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        textAreaCodigo.setBorder(new NumberedBorder());
        scrollPaneCodigo.setViewportView(textAreaCodigo);
        
        this.setLocationByPlatform(true);
        this.setTitle("MVM");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollPaneCodigo = new javax.swing.JScrollPane();
        textAreaCodigo = new javax.swing.JTextArea();
        btnStep = new javax.swing.JButton();
        btnRun = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaSaida = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        textAreaLog = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        edtAX = new javax.swing.JTextField();
        edtBX = new javax.swing.JTextField();
        edtCX = new javax.swing.JTextField();
        edtSP = new javax.swing.JTextField();
        edtBP = new javax.swing.JTextField();
        edtIP = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        textAreaStack = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        edtLinhaExecucao = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        taConsoleOut = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        textAreaCodigo.setEditable(false);
        textAreaCodigo.setColumns(20);
        textAreaCodigo.setRows(5);
        scrollPaneCodigo.setViewportView(textAreaCodigo);

        btnStep.setText("Step");
        btnStep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStepActionPerformed(evt);
            }
        });

        btnRun.setText("Run");
        btnRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRunActionPerformed(evt);
            }
        });

        textAreaSaida.setEditable(false);
        textAreaSaida.setColumns(20);
        textAreaSaida.setRows(5);
        jScrollPane1.setViewportView(textAreaSaida);

        textAreaLog.setEditable(false);
        textAreaLog.setColumns(20);
        textAreaLog.setRows(5);
        jScrollPane2.setViewportView(textAreaLog);

        jLabel1.setText("AX: ");

        jLabel2.setText("BX: ");

        jLabel3.setText("CX: ");

        jLabel4.setText("SP: ");

        jLabel5.setText("BP: ");

        jLabel6.setText("IP: ");

        edtAX.setEditable(false);

        edtBX.setEditable(false);

        edtCX.setEditable(false);

        edtSP.setEditable(false);

        edtBP.setEditable(false);

        edtIP.setEditable(false);

        jLabel7.setText("Stack");

        textAreaStack.setEditable(false);
        textAreaStack.setColumns(20);
        textAreaStack.setRows(5);
        textAreaStack.setAutoscrolls(false);
        jScrollPane3.setViewportView(textAreaStack);

        jLabel8.setText("Linha que executou: ");

        edtLinhaExecucao.setEditable(false);

        taConsoleOut.setColumns(10);
        taConsoleOut.setRows(10);
        taConsoleOut.setAutoscrolls(false);
        jScrollPane4.setViewportView(taConsoleOut);

        jButton1.setText("Int");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(scrollPaneCodigo, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnStep, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnRun, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel2)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(edtBX))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel3)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(edtCX))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel4)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(edtSP))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel1)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(edtAX, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel5)
                                                .addComponent(jLabel6))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(edtIP)
                                                .addComponent(edtBP))))
                                    .addComponent(jLabel7))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(edtLinhaExecucao, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnStep)
                    .addComponent(btnRun)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(edtAX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(edtBX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(edtCX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(edtSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(edtBP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(edtIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(scrollPaneCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(edtLinhaExecucao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnStepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStepActionPerformed
        short shPosicao = 0;
        if(bPrimeiroStep){ //só chama o codificador na primeira chamada do botao, é zera o ip
            mvm.halt = false;
            btnRun.setEnabled(false); //nao da Run enquanto estiver no Step
            LimpaCampos();
            mvm.zeraRegs();
            mvm.iPosicaoInstrucoes = 0; //para poder dar um run depois do step, para serem coisas separadas
            
            String sPosicao = JOptionPane.showInputDialog(this, "Digite o endereço de carga.", null);  
            if(sPosicao == null || sPosicao.equals(""))
                return;
            while(VerificaEnderecoDeCarga(sPosicao) == false){
                JOptionPane.showMessageDialog(this, "Entrada de dados inválida");
                sPosicao = JOptionPane.showInputDialog(this, "Digite o endereço de carga.", null);  
                if(sPosicao == null || sPosicao.equals(""))
                    return;
            }
                
            int iPosicao = Integer.parseInt(sPosicao);
            if(iPosicao < 1025)
                shPosicao = (short)iPosicao;
            else{
                JOptionPane.showMessageDialog(this, "Endereço de carga muito elevado.");
                return;
            }
                
            try {
                mvm.codificador(mem, shPosicao, arrayInstrucoesExecucao);
            } catch (IOException ex) {
                Logger.getLogger(TelaExecucao.class.getName()).log(Level.SEVERE, null, ex);
            }
            bPrimeiroStep = false;
            
            System.out.println("RED Colour");
            try {
                int startIndex = textAreaCodigo.getLineStartOffset(mvm.ip);
                int endIndex = textAreaCodigo.getLineEndOffset(mvm.ip);
               
                DefaultHighlighter.DefaultHighlightPainter painter = new DefaultHighlighter.DefaultHighlightPainter(Color.RED);
                textAreaCodigo.getHighlighter().addHighlight(startIndex, endIndex, painter);
            } catch (BadLocationException ex) {
                Logger.getLogger(TelaExecucao.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            mvm.ip = 0;
            
        }
        
//        if(!(mvm.iPosicaoInstrucoes >= arrayInstrucoesExecucao.size()) && !mvm.halt)
       	if(!mvm.halt)
        {
            if(!bProgramaInvalido){
                bStop = true; //a MVM verifica essa variavel, se for true ela sai do codificador, mas salva as variaveis
                mvm.decodificador(mem, 0, shPosicao, arrayInstrucoesExecucao);
            }
            else{
                bPrimeiroStep = true;
                btnRun.setEnabled(true);
            }
        }
        else{
            LimpaCampos();
            btnRun.setEnabled(true);
            bPrimeiroStep = true;
            mvm.zeraRegs();
        }
        
        System.out.println("RED Colour");
            try {int startIndex = textAreaCodigo.getLineStartOffset(mvm.ip-1);
                int endIndex = textAreaCodigo.getLineEndOffset(mvm.ip-1);
                
                DefaultHighlighter.DefaultHighlightPainter white = new DefaultHighlighter.DefaultHighlightPainter(Color.BLUE);
                textAreaCodigo.getHighlighter().addHighlight(startIndex, endIndex, white);
            
                
                startIndex = textAreaCodigo.getLineStartOffset(mvm.ip);
                endIndex = textAreaCodigo.getLineEndOffset(mvm.ip);
               
                DefaultHighlighter.DefaultHighlightPainter red = new DefaultHighlighter.DefaultHighlightPainter(Color.RED);
                textAreaCodigo.getHighlighter().addHighlight(startIndex, endIndex, red);
            } catch (BadLocationException ex) {
                Logger.getLogger(TelaExecucao.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_btnStepActionPerformed

    private void btnRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRunActionPerformed
        // TODO add your handling code here:
        short[] memLocal = new short[1025];
        System.arraycopy(mem, 0, memLocal, 0, memLocal.length); // para nao alterar a mem principal, para poder rodar de novo
        mvm.zeraRegs();
        mvm.halt = false;
        LimpaCampos();
        
        short shPosicao = 0;
        
        String sPosicao = JOptionPane.showInputDialog(this, "Digite o endereço de carga.", null);  
        if(sPosicao == null || sPosicao.equals(""))
            return;
        while(VerificaEnderecoDeCarga(sPosicao) == false){
            JOptionPane.showMessageDialog(this, "Entrada de dados inválida");
            sPosicao = JOptionPane.showInputDialog(this, "Digite o endereço de carga.", null);  
            if(sPosicao == null || sPosicao.equals(""))
                return;
        }

        int iPosicao = Integer.parseInt(sPosicao);
        if(iPosicao < 1025)
            shPosicao = (short)iPosicao;
        else{
            JOptionPane.showMessageDialog(this, "Endereço de carga muito elevado.");
            return;
        }
        
        try {
            mvm.codificador(memLocal, shPosicao, arrayInstrucoesExecucao);
        } catch (IOException ex) {
            Logger.getLogger(TelaExecucao.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        if(!bProgramaInvalido){
            bStop = false;
            mvm.decodificador(memLocal, 0, shPosicao, arrayInstrucoesExecucao);
        }
       
    }//GEN-LAST:event_btnRunActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        mvm.botao = 1;
    }//GEN-LAST:event_jButton1ActionPerformed

    private boolean VerificaEnderecoDeCarga(String sEntrada){
        if(sEntrada.length() > 4)
            return false;
        
        for (int i = 0; i < sEntrada.length(); i++) {
            if(sEntrada.charAt(i) < '0' || sEntrada.charAt(i) > '9')
                return false;
        }
        
        return true;
    }
    
    public void PreenchePilha(int sp, short shMem){
        textAreaStack.append(sp+" - "+shMem+"\n");
    }
    
    public void LimpaPilha(){
        textAreaStack.setText("");
    }
    
    public void LimpaCampos(){
        setEdtLinhaExecucao("");
        setTextLog("");
        setTextSaida("");
        LimpaPilha();
        edtAX.setText("");
        edtBX.setText("");
        edtCX.setText("");
        edtSP.setText("");
        edtBP.setText("");
        edtIP.setText("");
    }
    
    public void setaArray(ArrayList<String> arrayInstructions){
        if(arrayInstructions != null){
            arrayInstrucoesExecucao = arrayInstructions;
            preencheTextArea();
        }
    }

    void preencheTextArea(){
        for(String s : arrayInstrucoesExecucao){
            if(textAreaCodigo.getText().equals(""))
                textAreaCodigo.append(s);
            else
                textAreaCodigo.append("\n"+s);
        }
    }
    
    void setEdtLinhaExecucao(String sLinha){
        edtLinhaExecucao.setText(sLinha);
    }
    
    void setTextSaida(String sText){
        textAreaSaida.setText(sText);
    }
    
    void setTextLog(String sLog){
        textAreaLog.setText(sLog);
    }
    
    void appendLog(String sLog){
        textAreaLog.append(sLog+"\n");
    }
    
    void printConsoleOut(String out, int x, int y) {
        taConsoleOut.setText("");
        console[x][y] = out;
        for (int i = 0; i < 10; i++) {
            for (int j = 0; j < 10; j++) {
                String str = console[i][j]==null?" ":console[i][j];
                taConsoleOut.setText(taConsoleOut.getText() + str);
            }
            taConsoleOut.setText(taConsoleOut.getText() + "\n");
        }
    }
    
    void setRegistradores(int ax, int bx, int cx, int sp, int bp, int ip){
        edtAX.setText(String.valueOf(ax));
        edtBX.setText(String.valueOf(bx));
        edtCX.setText(String.valueOf(cx));
        edtSP.setText(String.valueOf(sp));
        edtBP.setText(String.valueOf(bp));
        edtIP.setText(String.valueOf(ip));
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaExecucao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaExecucao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaExecucao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaExecucao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaExecucao().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRun;
    private javax.swing.JButton btnStep;
    private javax.swing.JTextField edtAX;
    private javax.swing.JTextField edtBP;
    private javax.swing.JTextField edtBX;
    private javax.swing.JTextField edtCX;
    private javax.swing.JTextField edtIP;
    private javax.swing.JTextField edtLinhaExecucao;
    private javax.swing.JTextField edtSP;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane scrollPaneCodigo;
    private javax.swing.JTextArea taConsoleOut;
    private javax.swing.JTextArea textAreaCodigo;
    private javax.swing.JTextArea textAreaLog;
    private javax.swing.JTextArea textAreaSaida;
    private javax.swing.JTextArea textAreaStack;
    // End of variables declaration//GEN-END:variables
}
